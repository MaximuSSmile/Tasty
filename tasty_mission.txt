
Компания "Tasty" 
    - пиццы
    - сендвичей и 
    - безалкогольных напитков. Необходимо создать 
-простой интернет-магазин, в котором можно будет 
    -ознакомится с продукцией 
    -сделать заказ.

-простейшая главная страница
    -пицца
    -сендвичи
    -напитки
-плитки с изображениями товара 
    -ценой
    -названием 
    -кнопка добавления в корзину.

- Незарегистрированный пользователь может добавить несколько товаров в корзину
    - справа вверху на иконке корзины отображается кол-во добавленных товаров и сумма. 
    - нажатия на иконку корзины  появляется окно с подтверждением заказа 
    - где просто указана сумма и есть возможность ввести номер телефона 
- После нажатия на кнопку "заказать" проверяется формат номера телефона, и формируется заказ, который 
  - получает порядковый номер.

- часть для администратора. 
  - кнопка "войти в систему" переводит на страницу авторизации, где пользователь может ввести логин и пароль. 
  - Для упрощения задачи регистрацию для пользователей делать не нужно. 
- Администратора может 
    - добавлять/удалять/переименовывать категории товаров (пицца, напитки и т.д), а также может создавать/редактировать/удалять товары.

- Любой товар имеет 
  - название, 
  - цену, 
  - краткое описание, 
  - относится к одной категории, 
  - имеет одну фотографию. 
  -Фотографию можно загрузить при создании или редактировании товара. 
    -Любая категория имеет название и фотографию, которую можно редактировать при создании или изменении категории. 
-При загрузке фотографий система должна преобразовывать их в формат JPG и хранить две версии изображения 
  - большую картинку для просмотра товара и 
  - маленькую (thumb) для просмотра в списке товаров.

- Также в панели администрирования должен быть раздел "заказы", с иконкой сколько новых (не просмотренных) заказов появилось с момента прошлого входа в систему. 

- В заказе отображается номер заказа 
  - список товаров, который был заказан
  - телефон, указанный при формировании заказа. 
-Заказы можно удалять, просмотреть (после просмотра счетчик непросмотренных заказов уменьшается на 1)


Технические требования:
- ruby on rails 5.0 или выше, 
- mysql. 
Развертывание приложения - можно на heroku, aws, где удобно. 
- Для авторизации, обработки и хранения картинок можно использовать готовые gem-ы.
- Визуальное оформление: можно использовать UI-фреймворки. 
- Front-end: можно использовать только классические средства Rails, 
- использование любого фронт-енд фреймворка - большой плюс, 
- предпочтение - React, Angular, Vue.

Что будет оцениваться:
1. Возможность правильно оценить объем работы, то есть насколько правильно будет осуществлен estimate задания
2. Умение разбить задачу на требования, создание user stories
3. Дизайн базы данных, проектирование связей
4. Умение документировать формальные требования к продукту - создание тасок (tasks) и фич (features) в JIRA или Redmine (доступен бесплатно)
5. Умение работать с git - от инициализации репозитория до работы с ветками.
6. Test-driven development - умение вести разработку от спецификаций к тикетам, от тикетов к фейлящимся тестам, от тестов к готовому коду
7. Контроль code coverage - уровня покрытия кода тестами

Дополнительные плюсы:
1. Сдача проекта в docker-контейнере - большой плюс
2. Качество формления, аккуратность в CSS-стилях - плюс
3. Адаптивная верстка - плюс

Для контроля над выполнением задачи мне должен быть предоставлен доступ в репозиторий, в котором будет вестись работа над заданием. Если это будет публичный репозиторий - то просто ссылка на него. Работу над задачами (features) нужно вести в отдельных ветках, когда очередная фича реализована - открывать Pull Request в репозиторий и отправлять мне на Review

Первый этап задания - оценить задачу по времени. Если для выполнения задания нужно что-то изучать - время на изучение тоже планировать.

